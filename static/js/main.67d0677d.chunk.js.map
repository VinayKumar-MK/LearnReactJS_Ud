{"version":3,"sources":["component/UI/Card.js","component/Chart/ChartBar.js","component/Chart/Chart.js","component/Expenses/ExpensesChart.js","component/Expenses/ExpensesFilter.js","component/Expenses/ExpenseDate.js","component/Expenses/ExpenseItem.js","component/Expenses/ExpensesList.js","component/Expenses/SumExpense.js","component/Expenses/Expenses.js","component/NewExpense/ExpenseForm.js","component/NewExpense/NewExpense.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","classes","className","children","ChartBar","barFillHeight","maxValue","Math","round","value","style","height","label","Chart","dataPointValues","dataPoints","map","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","expense","date","getMonth","amount","ExpensesFilter","selected","onChange","event","onChangeFilter","target","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","title","ExpensesList","items","length","id","SumExpense","useState","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","NewExpense","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67d0677d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = (props) => {\r\n  const classes = 'card ' + props.className;\r\n\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = '0%';\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n  }\r\n\r\n  return (\r\n    <div className='chart-bar'>\r\n      <div className='chart-bar__inner'>\r\n        <div\r\n          className='chart-bar__fill'\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className='chart-bar__label'>{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;","import React from 'react';\r\n\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className='chart'>\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;","import React from 'react';\r\n\r\nimport Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: 'Jan', value: 0 },\r\n    { label: 'Feb', value: 0 },\r\n    { label: 'Mar', value: 0 },\r\n    { label: 'Apr', value: 0 },\r\n    { label: 'May', value: 0 },\r\n    { label: 'Jun', value: 0 },\r\n    { label: 'Jul', value: 0 },\r\n    { label: 'Aug', value: 0 },\r\n    { label: 'Sep', value: 0 },\r\n    { label: 'Oct', value: 0 },\r\n    { label: 'Nov', value: 0 },\r\n    { label: 'Dec', value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n   //console.log(expense.amount);\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import './ExpenseDate.css';\r\n\r\nfunction ExpenseDate(props) {\r\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\r\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;","\r\nimport './ExpenseItem.css'\r\nimport ExpenseDate from './ExpenseDate';\r\n\r\n\r\nfunction ExpenseItem(props) {\r\n\r\n\r\n    return(\r\n    <div className='expense-item'>\r\n      <ExpenseDate date={props.date}/>\r\n\r\n      <div className='expense-item__description'>\r\n        <h2>{props.title}</h2>\r\n        <div className =\"expense-item__price\">{props.amount}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n  }\r\n  \r\n  export default ExpenseItem;","import React from 'react';\r\n\r\nimport ExpenseItem from './ExpenseItem';\r\nimport './ExpensesList.css';\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className='expenses-list__fallback'>Found no expenses.</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className='expenses-list'>\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n \r\nexport default ExpensesList","\r\nimport React,{useState} from 'react';\r\n\r\n\r\nconst SumExpense = (props) => {\r\n \r\n    let [amount, setAmount] = useState(0);\r\n\r\n  /*for (const expense of props.items.expenses) {\r\n   \r\n    amount += expense.amount;\r\n  }*/\r\n\r\n  for (const expense of props.expenses) {\r\n    //const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\r\n    amount +=expense.amount;\r\n  }\r\n  return <div className =\"expense-item__price\">Grand Total : {amount}</div>;\r\n};\r\n\r\nexport default SumExpense;","//import ExpenseItem from './ExpenseItem';\r\nimport './Expenses.css';\r\nimport Card from '../UI/Card';\r\nimport ExpensesChart from './ExpensesChart';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpensesList from './ExpensesList';\r\nimport React,{useState} from 'react';\r\nimport SumExpense from './SumExpense';\r\n\r\nconst Expenses = (props)  => {\r\n    const [filteredYear, setFilteredYear] = useState('2020');\r\n    const filterChangeHandler = (selectedYear) => {\r\n        setFilteredYear(selectedYear);\r\n    };\r\n    const filteredExpenses = props.items.filter((expense) => {\r\n        return expense.date.getFullYear().toString() === filteredYear;\r\n    });\r\n\r\n\r\n    return (\r\n        <div className=\"expenses\">\r\n            <Card className='expenses'>\r\n                <ExpensesFilter\r\n                    selected={filteredYear}\r\n                    onChangeFilter={filterChangeHandler}\r\n                />\r\n                <ExpensesChart expenses={filteredExpenses} />\r\n                <ExpensesList items={filteredExpenses} />\r\n            <SumExpense expenses={filteredExpenses}/>\r\n            </Card>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\n\r\nexport default Expenses;","import React, { useState } from 'react';\r\n\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState('');\r\n  const [enteredAmount, setEnteredAmount] = useState('');\r\n  const [enteredDate, setEnteredDate] = useState('');\r\n  // const [userInput, setUserInput] = useState({\r\n  //   enteredTitle: '',\r\n  //   enteredAmount: '',\r\n  //   enteredDate: '',\r\n  // });\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredTitle: event.target.value,\r\n    // });\r\n    // setUserInput((prevState) => {\r\n    //   return { ...prevState, enteredTitle: event.target.value };\r\n    // });\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredAmount: event.target.value,\r\n    // });\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredDate: event.target.value,\r\n    // });\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle('');\r\n    setEnteredAmount('');\r\n    setEnteredDate('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className='new-expense__controls'>\r\n        <div className='new-expense__control'>\r\n          <label>Title</label>\r\n          <input\r\n            type='text'\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className='new-expense__control'>\r\n          <label>Amount</label>\r\n          <input\r\n            type='number'\r\n            min='0.01'\r\n            step='0.01'\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className='new-expense__control'>\r\n          <label>Date</label>\r\n          <input\r\n            type='date'\r\n            min='2019-01-01'\r\n            max='2022-12-31'\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='new-expense__actions'>\r\n        <button type='submit'>Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;","import React from 'react';\r\n\r\nimport ExpenseForm from './ExpenseForm';\r\nimport './NewExpense.css';\r\n\r\nconst NewExpense = (props) => {\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString()\r\n    };\r\n    props.onAddExpense(expenseData);\r\n  };\r\n\r\n  return (\r\n    <div className='new-expense'>\r\n      <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;","//import logo from './logo.svg';\nimport './App.css';\nimport Expenses from './component/Expenses/Expenses';\nimport NewExpense from './component/NewExpense/NewExpense';\nimport React,{useState} from 'react';\n//import ExpenseItem from './component/ExpenseItem';\n//import {usePreventScreenCapture} from 'expo-screen-capture';\n//import EventEmitter from 'EventEmitter';\n\nconst DUMMY_EXPENSES \n= [\n{\n   id: 'e1',\n   title: 'Toilet Paper',\n   amount: 94.12,\n   date: new Date(2020, 7, 14),\n },\n { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n {\n   id: 'e3',\n   title: 'Car Insurance',\n   amount: 294.67,\n   date: new Date(2021, 2, 28),\n\n },\n {\n   id: 'e4',\n   title: 'New Desk (Wooden)',\n   amount: 450,\n   date: new Date(2021, 5, 12),\n },\n];\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n        <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}